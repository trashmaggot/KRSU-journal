@page "/orders"
@using MediatR
@using Application.Features.OrderFeatures.Queries.GetOrdersQuery
@inject IMediator Mediator
@implements IDisposable

<PageTitle>Orders</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Orders List</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>
@if (Orders == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="Orders" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.Id)">Id</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.Sender.Name)">Sender Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.Sender.City)">Sender City</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.Sender.Address)">Sender Address</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.Receiver.Name)">Receiver Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.Receiver.City)">Receiver City</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.Receiver.Address)">Receiver Address</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.Weight)">Weight</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetOrdersResponse, object>(x => x.DateTime)">Date</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Sender Name">@context.Id</MudTd>
            <MudTd DataLabel="Sender Name">@context.Sender.Name</MudTd>
            <MudTd DataLabel="Sender City">@context.Sender.City</MudTd>
            <MudTd DataLabel="Sender Address">@context.Sender.Address</MudTd>

            <MudTd DataLabel="Receiver Name">@context.Receiver.Name</MudTd>
            <MudTd DataLabel="Receiver City">@context.Receiver.City</MudTd>
            <MudTd DataLabel="Receiver Address">@context.Receiver.Address</MudTd>

            <MudTd DataLabel="Weight">@context.Weight</MudTd>
            <MudTd DataLabel="Date">@context.DateTime.ToString("dd/MM/yyyy")</MudTd>
        </RowTemplate>
    </MudTable>
}


@code {
    public List<GetOrdersResponse>? Orders { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Orders = await Mediator.Send(new GetOrdersRequest());
    }

    public void Dispose()
    {
    }

}
